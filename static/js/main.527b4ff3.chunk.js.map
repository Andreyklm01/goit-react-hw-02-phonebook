{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.jsx","App.jsx","index.js","components/ContactsList/ContactsList.module.css","components/Filter/Filter.module.css"],"names":["module","exports","ContactForm","state","name","number","inputNameId","uuidv4","inputNumberId","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","resetInput","this","className","s","formContainer","form","title","htmlFor","input","id","type","pattern","required","onChange","button","Component","ContactsList","сontacts","onDelete","list","map","item","onClick","filterId","Filter","container","text","App","contacts","filter","addContact","newContact","find","contact","toLowerCase","alert","toUpperCase","setContacts","deleteContact","prevState","filterContacts","visibleContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.527b4ff3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"ContactForm_formContainer__1AwHI\",\"form\":\"ContactForm_form__1llW_\",\"input\":\"ContactForm_input__XaeIR\",\"title\":\"ContactForm_title__2jcJ_\",\"button\":\"ContactForm_button__2UNK8\"};","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n  inputNameId = uuidv4();\r\n  inputNumberId = uuidv4();\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n\r\n    if (!name || !number) return;\r\n    this.props.onSubmit(name, number);\r\n    this.resetInput();\r\n  };\r\n\r\n  resetInput = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <div className={s.formContainer}>\r\n        <form className={s.form} onSubmit={this.handleSubmit}>\r\n          <h3 className={s.title}>Name</h3>\r\n          <label htmlFor={this.inputNameId}>\r\n            <input\r\n              className={s.input}\r\n              id={this.inputNameId}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <h3 className={s.title}>Number</h3>\r\n          <label htmlFor={this.inputNumberId}>\r\n            <input\r\n              className={s.input}\r\n              id={this.inputNumberId}\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <button className={s.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.css';\r\n\r\nconst ContactsList = ({ сontacts, onDelete }) => (\r\n  <ul className={s.list}>\r\n    {сontacts.map(({ id, name, number }) => (\r\n      <li className={s.item} key={id}>\r\n        {name}: {number}\r\n        <button className={s.button} type=\"button\" onClick={() => onDelete(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.string),\r\n  onDelete: PropTypes.func,\r\n};\r\nexport default ContactsList;\r\n","import PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './Filter.module.css';\r\n\r\nconst filterId = uuidv4();\r\n\r\nconst Filter = ({ name, onChange }) => (\r\n  <div className={s.container}>\r\n    <p className={s.text}>Find Contacts by name:</p>\r\n    <label htmlFor={filterId}>\r\n      <input className={s.input} id={filterId} type=\"text\" value={name} onChange={onChange} />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n    const findContactsMatch = this.state.contacts.find(contact => {\n      return contact.name.toLowerCase() === name.toLowerCase();\n    });\n\n    findContactsMatch\n      ? alert(`${name.toUpperCase()} is allready in contacts`)\n      : this.setContacts(newContact);\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  setContacts = newContact => {\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, newContact],\n      };\n    });\n  };\n\n  filterContacts = ({ target }) => {\n    this.setState({ filter: target.value });\n  };\n\n  visibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const visibleContacts = this.visibleContacts();\n    return (\n      <>\n        <h1 className=\"main-title\">Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <div>\n          <h2 className=\"subtitle\">Contacts</h2>\n          <Filter name={this.state.filter} onChange={this.filterContacts} />\n          <ContactsList\n            сontacts={visibleContacts}\n            onDelete={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__TmjHG\",\"item\":\"ContactsList_item__2lvGE\",\"button\":\"ContactsList_button__1CnUT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__3MnDF\",\"text\":\"Filter_text__3SEkT\",\"input\":\"Filter_input__2W84M\"};"],"sourceRoot":""}